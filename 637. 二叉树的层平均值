/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        queue<TreeNode*>que;
        if(root!=NULL)
            que.push(root);
        vector<double>result;
        while(!que.empty()){
            int size=que.size();
            double sum=0;
            for(int i=0;i<size;i++){
                TreeNode* Node=que.front();
                que.pop();
                sum+=Node->val;
                if(Node->left)
                    que.push(Node->left);
                if(Node->right)
                    que.push(Node->right);
            }
            result.push_back(sum/size);
        }
        return result;
    }        
};
