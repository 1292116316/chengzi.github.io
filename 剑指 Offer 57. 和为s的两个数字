/* class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
        int l=0,r=nums.size()-1;
        while(l<r){
            if(nums[l]+nums[r]>target){
                r--;
            }else if(nums[l]+nums[r]<target){
                l++;
            }else{
                break;
            }
        }
        ans.push_back(nums[l]);
        ans.push_back(nums[r]);
        return ans;
    }
}; */
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_set<int> hash;
        for(auto x: nums){
            if(hash.count(target-x)){
                return vector<int>{x,target-x};
            }
            hash.insert(x);
        }
        return vector<int>{-1,-1};
    }
};
