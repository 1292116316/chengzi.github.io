//库函数
// class Solution {
// public:
//     string reverseStr(string s, int k) {
//         for(int i=0;i<s.size();i+=(2*k)){
//             if(i+k<=s.size()){
//                 reverse(s.begin()+i,s.begin()+i+k);
//             }else{
//                 reverse(s.begin()+i,s.end());
//             }
//         }
//         return s;
//     }
// };
//自定义
// class Solution {
// public:
//     void reverse(string& s,int start,int end){
//         for(int i=start,j=end;i<j;i++,j--){
//             swap(s[i],s[j]);
//         }
//     }
//     string reverseStr(string s, int k) {
//         for(int i=0;i<s.size();i+=(2*k)){
//             if(i+k<=s.size()){
//                 reverse(s,i,i+k-1);
//                 continue;
//             }
//             reverse(s,i,s.size()-1);
//         }
//     return s;
//     }
// };
class Solution {
public:
    string reverseStr(string s, int k) {
        int n = s.size(),pos = 0;
        while(pos < n){
            if(pos + k < n) reverse(s.begin() + pos, s.begin() + pos + k);
            else reverse(s.begin() + pos,s.end());
            pos += 2 * k;
        }
        return s;
    }
};
