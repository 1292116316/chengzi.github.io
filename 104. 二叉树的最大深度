/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//递归
/* class Solution {
public:
    int maxDepth(TreeNode* root) {
            if(root==nullptr){
                return 0;
            }else{
                return max(maxDepth(root->left),maxDepth(root->right))+1;
            }
    }
}; */
//循环迭代
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root==nullptr){
            return 0;
        }
        queue<TreeNode*>q;
        q.push(root);
        int depth=0;
        while(!q.empty()){
            int size=q.size();
            while(size>0){
                TreeNode* node=q.front();
                q.pop();
                if(node->left!=nullptr){
                    q.push(node->left);
                    }
                if(node->right!=nullptr){
                    q.push(node->right);
                }
            size--;
            }
        depth++;
        }
        return depth;
    }
};
